./src/classes/filesystem.class.js:                        type = "eDEX-UI theme";
./src/classes/filesystem.class.js:                        type = "eDEX-UI keyboard layout";
./src/classes/filesystem.class.js:                        type = "eDEX-UI config file";
./src/classes/filesystem.class.js:                        type = "eDEX-UI themes folder";
./src/classes/filesystem.class.js:                        type = "eDEX-UI keyboards folder";
./src/classes/updateChecker.class.js:                "User-Agent": "eDEX-UI UpdateChecker"
./src/classes/updateChecker.class.js:                                message: `eDEX-UI <strong>${release.tag_name}</strong> is now available.<br/>Head over to <a href="#" onclick="require('electron').shell.openExternal('${release.html_url}')">github.com</a> to download the latest version.`
./src/_boot.js:    dialog.showErrorBox("eDEX-UI crashed", e.message || "Cannot retrieve error message.");
./src/_boot.js:signale.start(`Starting eDEX-UI v${app.getVersion()}`);
./src/_boot.js:        title: "eDEX-UI",
./src/_boot.js:        TERM_PROGRAM: "eDEX-UI",
./src/package.json:  "productName": "eDEX-UI",
./src/package.json:  "description": "eDEX-UI sci-fi interface",
./src/_renderer.js:            bootScreen.innerHTML += `eDEX-UI Kernel version ${electron.remote.app.getVersion()} boot at ${Date().toString()}; root:xnu-1699.22.73~1/RELEASE_X86_64`;
./src/_renderer.js:    bootScreen.innerHTML = "<h1>eDEX-UI</h1>";
./src/_renderer.js:    window.term[0].term.writeln("\033[1m"+`Welcome to eDEX-UI v${electron.remote.app.getVersion()} - Electron v${process.versions.electron}`+"\033[0m");
./src/ui.html:        <title>eDEX-UI</title>
./src/assets/css/boot_screen.css:    content: "eDEX-UI";
./src/assets/css/boot_screen.css:    content: "eDEX-UI";
./src/assets/misc/boot_log.txt:Welcome to eDEX-UI!
./prebuild-src/classes/filesystem.class.js:class FilesystemDisplay{constructor(e){if(!e.parentId)throw"Missing options";const t=require("fs"),s=require("path");this.cwd=[],this.cwd_path=null,this.iconcolor=`rgb(${window.theme.r}, ${window.theme.g}, ${window.theme.b})`,this._formatBytes=(e,t)=>{if(0==e)return"0 Bytes";var s=1024,i=t||2,n=["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"],a=Math.floor(Math.log(e)/Math.log(s));return parseFloat((e/Math.pow(s,a)).toFixed(i))+" "+n[a]},this.fileIconsMatcher=require("./assets/misc/file-icons-match.js"),this.icons=require("./assets/icons/file-icons.json"),this.edexIcons={theme:{width:24,height:24,svg:'<path d="M 17.9994,3.99805L 17.9994,2.99805C 17.9994,2.44604 17.5514,1.99805 16.9994,1.99805L 4.9994,1.99805C 4.4474,1.99805 3.9994,2.44604 3.9994,2.99805L 3.9994,6.99805C 3.9994,7.55005 4.4474,7.99805 4.9994,7.99805L 16.9994,7.99805C 17.5514,7.99805 17.9994,7.55005 17.9994,6.99805L 17.9994,5.99805L 18.9994,5.99805L 18.9994,9.99805L 8.9994,9.99805L 8.9994,20.998C 8.9994,21.55 9.4474,21.998 9.9994,21.998L 11.9994,21.998C 12.5514,21.998 12.9994,21.55 12.9994,20.998L 12.9994,11.998L 20.9994,11.998L 20.9994,3.99805L 17.9994,3.99805 Z"/>'},themesDir:{width:24,height:24,svg:`<path d="m9.9994 3.9981h-6c-1.105 0-1.99 0.896-1.99 2l-0.01 12c0 1.104 0.895 2 2 2h16c1.104 0 2-0.896 2-2v-9.9999c0-1.104-0.896-2-2-2h-8l-1.9996-2z" stroke-width=".2"/><path stroke-linejoin="round" d="m18.8 9.3628v-0.43111c0-0.23797-0.19314-0.43111-0.43111-0.43111h-5.173c-0.23797 0-0.43111 0.19313-0.43111 0.43111v1.7244c0 0.23797 0.19314 0.43111 0.43111 0.43111h5.1733c0.23797 0 0.43111-0.19314 0.43111-0.43111v-0.43111h0.43111v1.7244h-4.3111v4.7422c0 0.23797 0.19314 0.43111 0.43111 0.43111h0.86221c0.23797 0 0.43111-0.19314 0.43111-0.43111v-3.879h3.449v-3.4492z" stroke-width=".086221" fill="${window.theme.colors.light_black}"/>`},kblayout:{width:24,height:24,svg:'<path d="M 18.9994,9.99807L 16.9994,9.99807L 16.9994,7.99807L 18.9994,7.99807M 18.9994,12.9981L 16.9994,12.9981L 16.9994,10.9981L 18.9994,10.9981M 15.9994,9.99807L 13.9994,9.99807L 13.9994,7.99807L 15.9994,7.99807M 15.9994,12.9981L 13.9994,12.9981L 13.9994,10.9981L 15.9994,10.9981M 15.9994,16.9981L 7.99941,16.9981L 7.99941,14.9981L 15.9994,14.9981M 6.99941,9.99807L 4.99941,9.99807L 4.99941,7.99807L 6.99941,7.99807M 6.99941,12.9981L 4.99941,12.9981L 4.99941,10.9981L 6.99941,10.9981M 7.99941,10.9981L 9.99941,10.9981L 9.99941,12.9981L 7.99941,12.9981M 7.99941,7.99807L 9.99941,7.99807L 9.99941,9.99807L 7.99941,9.99807M 10.9994,10.9981L 12.9994,10.9981L 12.9994,12.9981L 10.9994,12.9981M 10.9994,7.99807L 12.9994,7.99807L 12.9994,9.99807L 10.9994,9.99807M 19.9994,4.99807L 3.99941,4.99807C 2.89441,4.99807 2.0094,5.89406 2.0094,6.99807L 1.99941,16.9981C 1.99941,18.1021 2.89441,18.9981 3.99941,18.9981L 19.9994,18.9981C 21.1034,18.9981 21.9994,18.1021 21.9994,16.9981L 21.9994,6.99807C 21.9994,5.89406 21.1034,4.99807 19.9994,4.99807 Z"/>'},kblayoutsDir:{width:24,height:24,svg:`<path d="m9.9994 3.9981h-6c-1.105 0-1.99 0.896-1.99 2l-0.01 12c0 1.104 0.895 2 2 2h16c1.104 0 2-0.896 2-2v-9.9999c0-1.104-0.896-2-2-2h-8l-1.9996-2z" stroke-width=".2"/><path stroke-linejoin="round" d="m17.48 11.949h-1.14v-1.14h1.14m0 2.8499h-1.14v-1.14h1.14m-1.7099-0.56999h-1.14v-1.14h1.14m0 2.8499h-1.14v-1.14h1.14m0 3.4199h-4.56v-1.14h4.56m-5.13-2.85h-1.1399v-1.14h1.14m0 2.8499h-1.1399v-1.14h1.14m0.56998 0h1.14v1.14h-1.14m0-2.8499h1.14v1.14h-1.14m1.7099 0.56999h1.14v1.14h-1.14m0-2.8499h1.14v1.14h-1.14m5.13-2.8494h-9.1199c-0.62982 0-1.1343 0.51069-1.1343 1.14l-0.0057 5.6998c0 0.62925 0.51013 1.14 1.14 1.14h9.1196c0.62925 0 1.14-0.5107 1.14-1.14v-5.6998c0-0.62926-0.5107-1.14-1.14-1.14z" stroke-width="0.114" fill="${window.theme.colors.light_black}"/>`},settings:{width:24,height:24,svg:'<path d="M 11.9994,15.498C 10.0664,15.498 8.49939,13.931 8.49939,11.998C 8.49939,10.0651 10.0664,8.49805 11.9994,8.49805C 13.9324,8.49805 15.4994,10.0651 15.4994,11.998C 15.4994,13.931 13.9324,15.498 11.9994,15.498 Z M 19.4284,12.9741C 19.4704,12.6531 19.4984,12.329 19.4984,11.998C 19.4984,11.6671 19.4704,11.343 19.4284,11.022L 21.5414,9.36804C 21.7294,9.21606 21.7844,8.94604 21.6594,8.73004L 19.6594,5.26605C 19.5354,5.05005 19.2734,4.96204 19.0474,5.04907L 16.5584,6.05206C 16.0424,5.65607 15.4774,5.32104 14.8684,5.06903L 14.4934,2.41907C 14.4554,2.18103 14.2484,1.99805 13.9994,1.99805L 9.99939,1.99805C 9.74939,1.99805 9.5434,2.18103 9.5054,2.41907L 9.1304,5.06805C 8.52039,5.32104 7.95538,5.65607 7.43939,6.05206L 4.95139,5.04907C 4.7254,4.96204 4.46338,5.05005 4.33939,5.26605L 2.33939,8.73004C 2.21439,8.94604 2.26938,9.21606 2.4574,9.36804L 4.5694,11.022C 4.5274,11.342 4.49939,11.6671 4.49939,11.998C 4.49939,12.329 4.5274,12.6541 4.5694,12.9741L 2.4574,14.6271C 2.26938,14.78 2.21439,15.05 2.33939,15.2661L 4.33939,18.73C 4.46338,18.946 4.7254,19.0341 4.95139,18.947L 7.4404,17.944C 7.95639,18.34 8.52139,18.675 9.1304,18.9271L 9.5054,21.577C 9.5434,21.8151 9.74939,21.998 9.99939,21.998L 13.9994,21.998C 14.2484,21.998 14.4554,21.8151 14.4934,21.577L 14.8684,18.9271C 15.4764,18.6741 16.0414,18.34 16.5574,17.9431L 19.0474,18.947C 19.2734,19.0341 19.5354,18.946 19.6594,18.73L 21.6594,15.2661C 21.7844,15.05 21.7294,14.78 21.5414,14.6271L 19.4284,12.9741 Z"/>'}};const i=document.getElementById(e.parentId);i.innerHTML='\n            <h3 class="title"><p>FILESYSTEM</p><p id="fs_disp_title_dir"></p></h3>\n            <div id="fs_disp_container">\n            </div>\n            <div id="fs_space_bar">\n                <h1>EXIT DISPLAY</h1>\n                <h3>Calculating available space...</h3><progress value="100" max="100"></progress>\n            </div>',this.filesContainer=document.getElementById("fs_disp_container"),this.space_bar={text:document.querySelector("#fs_space_bar > h3"),bar:document.querySelector("#fs_space_bar > progress")},this.fsBlock={},this.dirpath="",this.failed=!1,this._noTracking=!1,this._runNextTick=!1,this._reading=!1,this._timer=setInterval((()=>{!0===this._runNextTick&&(this._runNextTick=!1,this.readFS(this.dirpath))}),1e3),this._asyncFSwrapper=new Proxy(t,{get:function(e,t){if(t in e)return function(...s){return new Promise(((i,n)=>{e[t](...s,((e,t)=>{null!=e&&n(e),void 0!==t&&i(t),void 0===t&&void 0===e&&i()}))}))}},set:function(){return!1}}),this.setFailedState=()=>{this.failed=!0,i.innerHTML='\n            <h3 class="title"><p>FILESYSTEM</p><p id="fs_disp_title_dir">EXECUTION FAILED</p></h3>\n            <h2 id="fs_disp_error">CANNOT ACCESS CURRENT WORKING DIRECTORY</h2>'},this.followTab=()=>{if(this._noTracking)return!1;let e=window.currentTerm;window.term[e].oncwdchange=t=>{if(this._noTracking)return!1;t&&t!==this.cwd_path&&window.currentTerm===e&&(this.cwd_path=t,this._fsWatcher&&this._fsWatcher.close(),t.startsWith("FALLBACK |-- ")?(this.readFS(t.slice(13)),this._noTracking=!0):(this.readFS(t),this.watchFS(t)))}},this.followTab(),this.watchFS=e=>{this._fsWatcher&&this._fsWatcher.close(),this._fsWatcher=t.watch(e,((e,t)=>{"change"!=e&&(this._runNextTick=!0)}))},this.toggleHidedotfiles=()=>{window.settings.hideDotfiles?(i.classList.remove("hideDotfiles"),window.settings.hideDotfiles=!1):(i.classList.add("hideDotfiles"),window.settings.hideDotfiles=!0)},this.toggleListview=()=>{window.settings.fsListView?(i.classList.remove("list-view"),window.settings.fsListView=!1):(i.classList.add("list-view"),window.settings.fsListView=!0)},this.readFS=async e=>{if(!0===this.failed||this._reading)return!1;this._reading=!0,document.getElementById("fs_disp_title_dir").innerText=this.dirpath,this.filesContainer.setAttribute("class",""),this.filesContainer.innerHTML="",this._noTracking&&(document.querySelector("section#filesystem > h3.title > p:first-of-type").innerText="FILESYSTEM - TRACKING FAILED, RUNNING DETACHED FROM TTY"),"win32"===process.platform&&e.endsWith(":")&&(e+="\\");let t=e,i=await this._asyncFSwrapper.readdir(t).catch((e=>{console.warn(e),!0===this._noTracking&&this.dirpath?(this.setFailedState(),setTimeout((()=>{this.readFS(this.dirpath)}),1e3)):this.setFailedState()}));if(this.reCalculateDiskUsage(t),this.cwd=[],await new Promise(((e,n)=>{0===i.length&&e(),i.forEach((async(a,o)=>{let r=await this._asyncFSwrapper.lstat(s.join(t,a)).catch((e=>{e.message.includes("EPERM")||e.message.includes("EBUSY")||n()})),d={name:window._escapeHtml(a),path:s.resolve(t,a),type:"other",category:"other",hidden:!1};void 0!==r?(d.lastAccessed=r.mtime.getTime(),r.isDirectory()&&(d.category="dir",d.type="dir"),"dir"===d.category&&t===settingsDir&&"themes"===a&&(d.type="edex-themesDir"),"dir"===d.category&&t===settingsDir&&"keyboards"===a&&(d.type="edex-kblayoutsDir"),r.isSymbolicLink()&&(d.category="symlink",d.type="symlink"),r.isFile()&&(d.category="file",d.type="file",d.size=r.size)):(d.type="system",d.hidden=!0),"file"===d.category&&t===themesDir&&a.endsWith(".json")&&(d.type="edex-theme"),"file"===d.category&&t===keyboardsDir&&a.endsWith(".json")&&(d.type="edex-kblayout"),"file"===d.category&&t===settingsDir&&"settings.json"===a&&(d.type="edex-settings"),"file"===d.category&&t===settingsDir&&"shortcuts.json"===a&&(d.type="edex-shortcuts"),a.startsWith(".")&&(d.hidden=!0),this.cwd.push(d),o===i.length-1&&e()}))})).catch((()=>{this.setFailedState()})),this.failed)return!1;let n={dir:0,symlink:1,file:2,other:3};this.cwd.sort(((e,t)=>n[e.category]-n[t.category]||e.name.localeCompare(t.name))),this.cwd.splice(0,0,{name:"Show disks",type:"showDisks"}),"/"!==t&&!1===/^[A-Z]:\\$/i.test(t)&&this.cwd.splice(1,0,{name:"Go up",type:"up"}),this.dirpath=t,this.render(this.cwd),this._reading=!1},this.readDevices=async()=>{if(!0===this.failed)return!1;let e=await window.si.blockDevices(),s=[];e.forEach((e=>{if(t.existsSync(e.mount)){let t="rom"===e.type?"rom":"disk";e.removable&&"rom"!==e.type&&(t="usb"),s.push({name:""!==e.label?`${e.label} (${e.name})`:`${e.mount} (${e.name})`,type:t,path:e.mount})}})),this.render(s,!0)},this.render=async(e,t)=>{let s=JSON.parse(JSON.stringify(e));if(!0===this.failed)return!1;t?(document.getElementById("fs_disp_title_dir").innerText="Showing available block devices",this.filesContainer.setAttribute("class","disks")):(document.getElementById("fs_disp_title_dir").innerText=this.dirpath,this.filesContainer.setAttribute("class","")),this._noTracking&&(document.querySelector("section#filesystem > h3.title > p:first-of-type").innerText="FILESYSTEM - TRACKING FAILED, RUNNING DETACHED FROM TTY");let i="";s.forEach(((e,t)=>{let s=e.hidden?" hidden":"",n=`if (window.keyboard.container.dataset.isCtrlOn == "true") {\n                                electron.shell.openPath(fsDisp.cwd[${t}].path);\n                                electronWin.minimize();\n                            } else if (window.keyboard.container.dataset.isShiftOn == "true") {\n                                window.term[window.currentTerm].write("\\""+fsDisp.cwd[${t}].path+"\\"");\n                            } else {\n                          `.replace(/\n+ */g,""),a="}",o;o=this._noTracking?"dir"===e.type||e.type.endsWith("Dir")?`window.fsDisp.readFS(fsDisp.cwd[${t}].path)`:"up"===e.type?'window.fsDisp.readFS(path.resolve(window.fsDisp.dirpath, ".."))':"disk"===e.type||"rom"===e.type||"usb"===e.type?`window.fsDisp.readFS("${e.path.replace(/\\/g,"")}")`:`window.term[window.currentTerm].write("\\""+fsDisp.cwd[${t}].path+"\\"")`:"dir"===e.type||e.type.endsWith("Dir")?`window.term[window.currentTerm].writelr("cd \\""+fsDisp.cwd[${t}].name+"\\"")`:"up"===e.type?'window.term[window.currentTerm].writelr("cd ..")':"disk"===e.type||"rom"===e.type||"usb"===e.type?"win32"===process.platform?`window.term[window.currentTerm].writelr("${e.path.replace(/\\/g,"")}")`:`window.term[window.currentTerm].writelr("cd \\"${e.path.replace(/\\/g,"")}\\"")`:`window.term[window.currentTerm].write("\\""+fsDisp.cwd[${t}].path+"\\"")`,"file"===e.type&&(o=`window.fsDisp.openFile(${t})`),"system"===e.type&&(o=""),"showDisks"===e.type&&(o="window.fsDisp.readDevices()",n="",a=""),"up"===e.type&&(n="",a=""),"edex-theme"===e.type&&(o=`window.themeChanger("${e.name.slice(0,-5)}")`),"edex-kblayout"===e.type&&(o=`window.remakeKeyboard("${e.name.slice(0,-5)}")`),"edex-settings"===e.type&&(o="window.openSettings()"),"edex-shortcuts"===e.type&&(o="window.openShortcutsHelp()");let r="",d="";switch(e.type){case"showDisks":r=this.icons.showDisks,d="--",e.category="showDisks";break;case"up":r=this.icons.up,d="--",e.category="up";break;case"symlink":r=this.icons.symlink;break;case"disk":r=this.icons.disk;break;case"rom":r=this.icons.rom;break;case"usb":r=this.icons.usb;break;case"edex-theme":r=this.edexIcons.theme,d="eDEX-UI theme";break;case"edex-kblayout":r=this.edexIcons.kblayout,d="eDEX-UI keyboard layout";break;case"edex-settings":case"edex-shortcuts":r=this.edexIcons.settings,d="eDEX-UI config file";break;case"system":r=this.edexIcons.settings;break;case"edex-themesDir":r=this.edexIcons.themesDir,d="eDEX-UI themes folder";break;case"edex-kblayoutsDir":r=this.edexIcons.kblayoutsDir,d="eDEX-UI keyboards folder";break;default:let t=this.fileIconsMatcher(e.name);r=this.icons[t],void 0===r?("file"===e.type&&(r=this.icons.file),"dir"===e.type&&(r=this.icons.dir,d="folder"),void 0===r&&(r=this.icons.other)):d="dir"!==e.category?t.replace("icon-",""):"special folder";break}""===d&&(d=e.type),e.type=d,"video"!==e.type&&"audio"!==e.type&&"image"!==e.type||(this.cwd[t].type=e.type,o=`window.fsDisp.openMedia(${t})`),"number"==typeof e.size?e.size=this._formatBytes(e.size):e.size="--","number"==typeof e.lastAccessed?e.lastAccessed=new Date(e.lastAccessed).toLocaleString():e.lastAccessed="--",i+=`<div class="fs_disp_${e.type}${s} animationWait" onclick='${n+o+a}'>\n                                <svg viewBox="0 0 ${r.width} ${r.height}" fill="${this.iconcolor}">\n                                    ${r.svg}\n                                </svg>\n                                <h3>${e.name}</h3>\n                                <h4>${d}</h4>\n                                <h4>${e.size}</h4>\n                                <h4>${e.lastAccessed}</h4>\n                            </div>`})),this.filesContainer.innerHTML=i,this.filesContainer.getAttribute("class").endsWith("disks")?document.getElementById("fs_space_bar").setAttribute("onclick","window.fsDisp.render(window.fsDisp.cwd)"):document.getElementById("fs_space_bar").setAttribute("onclick","");let n=0;for(;this.filesContainer.childNodes[n];){let e=this.filesContainer.childNodes[n];e.setAttribute("class",e.className.replace(" animationWait","")),!0===window.settings.hideDotfiles&&-1!==e.className.indexOf("hidden")||(window.audioManager.folder.play(),await _delay(30)),n++}},this.reCalculateDiskUsage=async e=>{this.fsBlock=null,this.space_bar.text.innerHTML="Calculating available space...",this.space_bar.bar.removeAttribute("value"),window.si.fsSize().catch((()=>{this.space_bar.text.innerHTML="Could not calculate mountpoint usage.",this.space_bar.bar.value=100})).then((t=>{t.forEach((t=>{e.startsWith(t.mount)&&(this.fsBlock=t)})),this.renderDiskUsage(this.fsBlock)}))},this.renderDiskUsage=async e=>{if(""!==document.getElementById("fs_space_bar").getAttribute("onclick")||null===e)return;let t="win32"===process.platform?"\\":"/",s=e.mount.length<18?e.mount:"..."+t+e.mount.split(t).pop();if(isNaN(e.use))if(isNaN(e.size/e.used*100))this.space_bar.text.innerHTML="Could not calculate mountpoint usage.",this.space_bar.bar.value=100;else{let t=Math.round(e.size/e.used*100);this.space_bar.text.innerHTML=`Mount <strong>${s}</strong> used <strong>${t}%</strong>`,this.space_bar.bar.value=t}else this.space_bar.text.innerHTML=`Mount <strong>${s}</strong> used <strong>${Math.round(e.use)}%</strong>`,this.space_bar.bar.value=Math.round(e.use)},0===window.performance.navigation.type&&this.readFS(window.term[window.currentTerm].cwd||window.settings.cwd),this.openFile=(e,s,i)=>{let n;"number"==typeof e&&(n=this.cwd[e],e=n.name);let a=require("mime-types");n.path=n.path.replace(/\\/g,"/");let o=a.lookup(e.split(".")[e.split(".").length-1]);switch(o){case"application/pdf":let s=`<div>\n                        <div class="pdf_options">\n                            <button class="zoom_in">\n                                <svg viewBox="0 0 ${this.icons["zoom-in"].width} ${this.icons["zoom-in"].height}" fill="${this.iconcolor}">\n                                    ${this.icons["zoom-in"].svg}\n                                </svg>\n                            </button>\n                            <button class="zoom_out">\n                                <svg viewBox="0 0 ${this.icons["zoom-out"].width} ${this.icons["zoom-out"].height}" fill="${this.iconcolor}">\n                                    ${this.icons["zoom-out"].svg}\n                                </svg>\n                            </button>\n                            <button class="previous_page">\n                                <svg viewBox="0 0 ${this.icons.backwards.width} ${this.icons.backwards.height}" fill="${this.iconcolor}">\n                                    ${this.icons.backwards.svg}\n                                </svg>\n                            </button>\n                            <span>Page: <span class="page_num"/></span><span>/</span> <span class="page_count"></span></span>\n                            <button class="next_page">\n                                <svg viewBox="0 0 ${this.icons.forwards.width} ${this.icons.forwards.height}" fill="${this.iconcolor}">\n                                    ${this.icons.forwards.svg}\n                                </svg>\n                            </button>\n                        </div>\n                        <div class="pdf_container fsDisp_mediaDisp">\n                            <canvas class="pdf_canvas" />\n                        </div>\n                    </div>`;const i=new Modal({type:"custom",title:_escapeHtml(e),html:s});new DocReader({modalId:i.id,path:n.path});break;default:if("UTF-8"===a.charset(o)){t.readFile(n.path,"utf-8",((t,s)=>{t&&(new Modal({type:"info",title:"Failed to load file: "+n.path,html:t}),console.log(t)),window.keyboard.detach(),new Modal({type:"custom",title:_escapeHtml(e),html:`<textarea id="fileEdit" rows="40" cols="150" spellcheck="false">${s}</textarea><p id="fedit-status"></p>`,buttons:[{label:"Save to Disk",action:`window.writeFile('${n.path}')`}]},(()=>{window.keyboard.attach(),window.term[window.currentTerm].term.focus()}))}));break}}},this.openMedia=(e,t,s)=>{let i,n;switch("number"==typeof e&&(i=this.cwd[e],e=i.name),i.path=i.path.replace(/\\/g,"/"),s||i.type){case"image":n=`<img class="fsDisp_mediaDisp" src="${window._encodePathURI(t||i.path)}" ondragstart="return false;">`;break;case"audio":n=`<div>\n                                <div class="media_container" data-fullscreen="false">\n                                    <audio class="media fsDisp_mediaDisp" preload="auto">\n                                        <source src="${window._encodePathURI(t||i.path)}">\n                                        Unsupported audio format!\n                                    </audio>\n                                    <div class="media_controls" data-state="hidden">\n                                        <div class="playpause media_button" data-state="play">\n                                            <svg viewBox="0 0 ${this.icons.play.width} ${this.icons.play.height}" fill="${this.iconcolor}">\n                                                ${this.icons.play.svg}\n                                            </svg>\n                                        </div>\n                                        <div class="progress_container">\n                                            <div class="progress">\n                                                <span class="progress_bar"></span>\n                                            </div>\n                                        </div>\n                                        <div class="media_time">00:00:00</div>\n                                        <div class="volume_icon">\n                                            <svg viewBox="0 0 ${this.icons.volume.width} ${this.icons.volume.height}" fill="${this.iconcolor}">\n                                                ${this.icons.volume.svg}\n                                            </svg>\n                                        </div>\n                                        <div class="volume">\n                                            <div class="volume_bkg"></div>\n                                            <div class="volume_bar"></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>`;break;case"video":n=`<div>\n                                <div class="media_container" data-fullscreen="false">\n                                    <video class="media fsDisp_mediaDisp" preload="auto">\n                                        <source src="${window._encodePathURI(t||i.path)}">\n                                        Unsupported video format!\n                                    </video>\n                                    <div class="media_controls" data-state="hidden">\n                                        <div class="playpause media_button" data-state="play">\n                                            <svg viewBox="0 0 ${this.icons.play.width} ${this.icons.play.height}" fill="${this.iconcolor}">\n                                                ${this.icons.play.svg}\n                                            </svg>\n                                        </div>\n                                        <div class="progress_container">\n                                            <div class="progress">\n                                                <span class="progress_bar"></span>\n                                            </div>\n                                        </div>\n                                        <div class="media_time">00:00:00</div>\n                                        <div class="volume_icon">\n                                            <svg viewBox="0 0 ${this.icons.volume.width} ${this.icons.volume.height}" fill="${this.iconcolor}">\n                                                ${this.icons.volume.svg}\n                                            </svg>\n                                        </div>\n                                        <div class="volume">\n                                            <div class="volume_bkg"></div>\n                                            <div class="volume_bar"></div>\n                                        </div>\n                                        <div class="fs media_button" data-state="go-fullscreen">\n                                            <svg viewBox="0 0 ${this.icons.fullscreen.width} ${this.icons.fullscreen.height}" fill="${this.iconcolor}">\n                                                ${this.icons.fullscreen.svg}\n                                            </svg>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>`;break;default:throw new Error("fsDisp media displayer: unknown type "+(s||i.type))}const a=new Modal({type:"custom",title:_escapeHtml(e),html:n});"audio"!==i.type&&"video"!==i.type||new MediaPlayer({modalId:a.id,path:i.path,type:i.type})}}}module.exports={FilesystemDisplay};
./prebuild-src/classes/updateChecker.class.js:class UpdateChecker{constructor(){let e=require("https"),t=require("electron"),r,a=require("@electron/remote").app.getVersion();this._failed=!1,this._willfail=!1,this._fail=e=>{this._failed=!0,t.ipcRenderer.send("log","note","UpdateChecker: Could not fetch latest release from GitHub's API."),t.ipcRenderer.send("log","debug",`Error: ${e}`)},e.get({protocol:"https:",host:"api.github.com",path:"/repos/GitSquared/edex-ui/releases/latest",headers:{"User-Agent":"eDEX-UI UpdateChecker"}},(e=>{switch(e.statusCode){case 200:break;case 404:this._fail("Got 404 (Not Found) response from server");break;default:this._willfail=!0}let r="";e.on("data",(e=>{r+=e})),e.on("end",(()=>{let e=r;if(!0===this._failed);else if(this._willfail)this._fail(e.toString());else try{let r=JSON.parse(e.toString());r.tag_name.slice(1)===a?t.ipcRenderer.send("log","info","UpdateChecker: Running latest version."):Number(r.tag_name.slice(1).replace(/\./g,""))<Number(a.replace("-pre","").replace(/\./g,""))?t.ipcRenderer.send("log","info","UpdateChecker: Running an unreleased, development version."):(new Modal({type:"info",title:"New version available",message:`eDEX-UI <strong>${r.tag_name}</strong> is now available.<br/>Head over to <a href="#" onclick="require('electron').shell.openExternal('${r.html_url}')">github.com</a> to download the latest version.`}),t.ipcRenderer.send("log","info",`UpdateChecker: New version ${r.tag_name} available.`))}catch(e){this._fail(e)}}))})).on("error",(e=>{this._fail(e)}))}}module.exports={UpdateChecker};
./prebuild-src/_boot.js:const signale=require("signale"),{app,BrowserWindow,dialog,shell}=require("electron");process.on("uncaughtException",(e=>{signale.fatal(e),dialog.showErrorBox("eDEX-UI crashed",e.message||"Cannot retrieve error message."),tty&&tty.close(),extraTtys&&Object.keys(extraTtys).forEach((e=>{null!==extraTtys[e]&&extraTtys[e].close()})),process.exit(1)})),signale.start(`Starting eDEX-UI v${app.getVersion()}`),signale.info(`With Node ${process.versions.node} and Electron ${process.versions.electron}`),signale.info(`Renderer is Chrome ${process.versions.chrome}`);const gotLock=app.requestSingleInstanceLock();gotLock||(signale.fatal("Error: Another instance of eDEX is already running. Cannot proceed."),app.exit(1)),signale.time("Startup");const electron=require("electron");require("@electron/remote/main").initialize();const ipc=electron.ipcMain,path=require("path"),url=require("url"),fs=require("fs"),which=require("which"),Terminal=require("./classes/terminal.class.js").Terminal;var win,tty,extraTtys;ipc.on("log",((e,t,n)=>{signale[t](n)}));const settingsFile=path.join(electron.app.getPath("userData"),"settings.json"),shortcutsFile=path.join(electron.app.getPath("userData"),"shortcuts.json"),lastWindowStateFile=path.join(electron.app.getPath("userData"),"lastWindowState.json"),themesDir=path.join(electron.app.getPath("userData"),"themes"),innerThemesDir=path.join(__dirname,"assets/themes"),kblayoutsDir=path.join(electron.app.getPath("userData"),"keyboards"),innerKblayoutsDir=path.join(__dirname,"assets/kb_layouts"),fontsDir=path.join(electron.app.getPath("userData"),"fonts"),innerFontsDir=path.join(__dirname,"assets/fonts");process.env.http_proxy&&delete process.env.http_proxy,process.env.https_proxy&&delete process.env.https_proxy,app.commandLine.appendSwitch("ignore-gpu-blocklist"),app.commandLine.appendSwitch("enable-gpu-rasterization"),app.commandLine.appendSwitch("enable-video-decode");try{fs.mkdirSync(electron.app.getPath("userData")),signale.info(`Created config dir at ${electron.app.getPath("userData")}`)}catch(e){signale.info(`Base config dir is ${electron.app.getPath("userData")}`)}fs.existsSync(settingsFile)||(fs.writeFileSync(settingsFile,JSON.stringify({shell:"win32"===process.platform?"powershell.exe":"bash",shellArgs:"",cwd:electron.app.getPath("userData"),keyboard:"en-US",theme:"tron",termFontSize:15,audio:!0,audioVolume:1,disableFeedbackAudio:!1,clockHours:24,pingAddr:"1.1.1.1",port:3e3,nointro:!1,nocursor:!1,forceFullscreen:!0,allowWindowed:!1,excludeThreadsFromToplist:!0,hideDotfiles:!1,fsListView:!1,experimentalGlobeFeatures:!1,experimentalFeatures:!1},"",4)),signale.info(`Default settings written to ${settingsFile}`)),fs.existsSync(shortcutsFile)||(fs.writeFileSync(shortcutsFile,JSON.stringify([{type:"app",trigger:"Ctrl+Shift+C",action:"COPY",enabled:!0},{type:"app",trigger:"Ctrl+Shift+V",action:"PASTE",enabled:!0},{type:"app",trigger:"Ctrl+Tab",action:"NEXT_TAB",enabled:!0},{type:"app",trigger:"Ctrl+Shift+Tab",action:"PREVIOUS_TAB",enabled:!0},{type:"app",trigger:"Ctrl+X",action:"TAB_X",enabled:!0},{type:"app",trigger:"Ctrl+Shift+S",action:"SETTINGS",enabled:!0},{type:"app",trigger:"Ctrl+Shift+K",action:"SHORTCUTS",enabled:!0},{type:"app",trigger:"Ctrl+Shift+F",action:"FUZZY_SEARCH",enabled:!0},{type:"app",trigger:"Ctrl+Shift+L",action:"FS_LIST_VIEW",enabled:!0},{type:"app",trigger:"Ctrl+Shift+H",action:"FS_DOTFILES",enabled:!0},{type:"app",trigger:"Ctrl+Shift+P",action:"KB_PASSMODE",enabled:!0},{type:"app",trigger:"Ctrl+Shift+I",action:"DEV_DEBUG",enabled:!1},{type:"app",trigger:"Ctrl+Shift+F5",action:"DEV_RELOAD",enabled:!0},{type:"shell",trigger:"Ctrl+Shift+Alt+Space",action:"neofetch",linebreak:!0,enabled:!1}],"",4)),signale.info(`Default keymap written to ${shortcutsFile}`)),fs.existsSync(lastWindowStateFile)||(fs.writeFileSync(lastWindowStateFile,JSON.stringify({useFullscreen:!0},"",4)),signale.info(`Default last window state written to ${lastWindowStateFile}`)),signale.pending("Mirroring internal assets...");try{fs.mkdirSync(themesDir)}catch(e){}fs.readdirSync(innerThemesDir).forEach((e=>{fs.writeFileSync(path.join(themesDir,e),fs.readFileSync(path.join(innerThemesDir,e),{encoding:"utf-8"}))}));try{fs.mkdirSync(kblayoutsDir)}catch(e){}fs.readdirSync(innerKblayoutsDir).forEach((e=>{fs.writeFileSync(path.join(kblayoutsDir,e),fs.readFileSync(path.join(innerKblayoutsDir,e),{encoding:"utf-8"}))}));try{fs.mkdirSync(fontsDir)}catch(e){}fs.readdirSync(innerFontsDir).forEach((e=>{fs.writeFileSync(path.join(fontsDir,e),fs.readFileSync(path.join(innerFontsDir,e)))}));const versionHistoryPath=path.join(electron.app.getPath("userData"),"versions_log.json");var versionHistory=fs.existsSync(versionHistoryPath)?require(versionHistoryPath):{},version=app.getVersion();function createWindow(e){let t;signale.info("Creating window..."),t=isNaN(e.monitor)?electron.screen.getPrimaryDisplay():electron.screen.getAllDisplays()[e.monitor]||electron.screen.getPrimaryDisplay();let{x:n,y:r,width:i,height:s}=t.bounds;i++,s++,(win=new BrowserWindow({title:"eDEX-UI",x:n,y:r,width:i,height:s,show:!1,resizable:!0,movable:e.allowWindowed||!1,fullscreen:e.forceFullscreen||!1,autoHideMenuBar:!0,frame:e.allowWindowed||!1,backgroundColor:"#000000",webPreferences:{devTools:!0,enableRemoteModule:!0,contextIsolation:!1,backgroundThrottling:!1,webSecurity:!0,nodeIntegration:!0,nodeIntegrationInSubFrames:!1,allowRunningInsecureContent:!1,experimentalFeatures:e.experimentalFeatures||!1}})).loadURL(url.format({pathname:path.join(__dirname,"ui.html"),protocol:"file:",slashes:!0})),signale.complete("Frontend window created!"),win.show(),e.allowWindowed?require(lastWindowStateFile).useFullscreen||win.setFullScreen(!1):win.setResizable(!1),signale.watch("Waiting for frontend connection...")}void 0===versionHistory[version]?versionHistory[version]={firstSeen:Date.now(),lastSeen:Date.now()}:versionHistory[version].lastSeen=Date.now(),fs.writeFileSync(versionHistoryPath,JSON.stringify(versionHistory,0,2),{encoding:"utf-8"}),app.on("ready",(async()=>{signale.pending("Loading settings file...");let e=require(settingsFile);if(signale.pending("Resolving shell path..."),e.shell=await which(e.shell).catch((e=>{throw e})),signale.info(`Shell found at ${e.shell}`),signale.success("Settings loaded!"),!require("fs").existsSync(e.cwd))throw new Error("Configured cwd path does not exist.");let t=await require("shell-env")(e.shell).catch((e=>{throw e}));Object.assign(t,{TERM:"xterm-256color",COLORTERM:"truecolor",TERM_PROGRAM:"eDEX-UI",TERM_PROGRAM_VERSION:app.getVersion()},e.env),signale.pending(`Creating new terminal process on port ${e.port||"3000"}`),tty=new Terminal({role:"server",shell:e.shell,params:e.shellArgs||"",cwd:e.cwd,env:t,port:e.port||3e3}),signale.success("Terminal back-end initialized!"),tty.onclosed=(e,t)=>{tty.ondisconnected=()=>{},signale.complete("Terminal exited",e,t),app.quit()},tty.onopened=()=>{signale.success("Connected to frontend!"),signale.timeEnd("Startup")},tty.onresized=(e,t)=>{signale.info("Resized TTY to ",e,t)},tty.ondisconnected=()=>{signale.error("Lost connection to frontend"),signale.watch("Waiting for frontend connection...")},signale.pending("Starting multithreaded calls controller..."),require("./_multithread.js"),createWindow(e),extraTtys={};let n=e.port||3e3;n=Number(n)+2;for(let e=0;e<4;e++)extraTtys[n+e]=null;ipc.on("ttyspawn",((n,r)=>{let i=null;if(Object.keys(extraTtys).forEach((e=>{null===extraTtys[e]&&null===i&&(extraTtys[e]={},i=e)})),null===i)signale.error("TTY spawn denied (Reason: exceeded max TTYs number)"),n.sender.send("ttyspawn-reply","ERROR: max number of ttys reached");else{signale.pending(`Creating new TTY process on port ${i}`);let r=new Terminal({role:"server",shell:e.shell,params:e.shellArgs||"",cwd:tty.tty._cwd||e.cwd,env:t,port:i});signale.success(`New terminal back-end initialized at ${i}`),r.onclosed=(e,t)=>{r.ondisconnected=()=>{},r.wss.close(),signale.complete(`TTY exited at ${i}`,e,t),extraTtys[r.port]=null,r=null},r.onopened=e=>{signale.success(`TTY ${i} connected to frontend (process PID ${e})`)},r.onresized=()=>{},r.ondisconnected=()=>{r.onclosed=()=>{},r.close(),r.wss.close(),extraTtys[r.port]=null,r=null},extraTtys[i]=r,n.sender.send("ttyspawn-reply","SUCCESS: "+i)}}));let r=null,i=null;ipc.on("getThemeOverride",((e,t)=>{e.sender.send("getThemeOverride",r)})),ipc.on("getKbOverride",((e,t)=>{e.sender.send("getKbOverride",i)})),ipc.on("setThemeOverride",((e,t)=>{r=t})),ipc.on("setKbOverride",((e,t)=>{i=t}))})),app.on("web-contents-created",((e,t)=>{t.on("new-window",((e,t)=>{e.preventDefault(),shell.openExternal(t)})),t.on("will-navigate",((e,n)=>{n!==t.getURL()&&e.preventDefault()}))})),app.on("window-all-closed",(()=>{signale.info("All windows closed"),app.quit()})),app.on("before-quit",(()=>{tty.close(),Object.keys(extraTtys).forEach((e=>{null!==extraTtys[e]&&extraTtys[e].close()})),signale.complete("Shutting down...")}));
./prebuild-src/package.json:  "productName": "eDEX-UI",
./prebuild-src/package.json:  "description": "eDEX-UI sci-fi interface",
./prebuild-src/_renderer.js:window.eval=global.eval=function(){throw new Error("eval() is disabled for security reasons.")},window._escapeHtml=e=>{let t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return e.replace(/[&<>"']/g,(e=>t[e]))},window._encodePathURI=e=>encodeURI(e).replace(/#/g,"%23"),window._purifyCSS=e=>void 0===e?"":("string"!=typeof e&&(e=e.toString()),e.replace(/[<]/g,"")),window._delay=e=>new Promise(((t,n)=>{setTimeout(t,e)})),window.onerror=(e,t,n,o,i)=>{document.getElementById("boot_screen").innerHTML+=`${i} :  ${e}<br/>==> at ${t}  ${n}:${o}`};const path=require("path"),fs=require("fs"),electron=require("electron"),remote=require("@electron/remote"),ipc=electron.ipcRenderer,settingsDir=remote.app.getPath("userData"),themesDir=path.join(settingsDir,"themes"),keyboardsDir=path.join(settingsDir,"keyboards"),fontsDir=path.join(settingsDir,"fonts"),settingsFile=path.join(settingsDir,"settings.json"),shortcutsFile=path.join(settingsDir,"shortcuts.json"),lastWindowStateFile=path.join(settingsDir,"lastWindowState.json");function initGraphicalErrorHandling(){window.edexErrorsModals=[],window.onerror=(e,t,n,o,i)=>{let r=new Modal({type:"error",title:i,message:`${e}<br/>        at ${t}  ${n}:${o}`});window.edexErrorsModals.push(r),ipc.send("log","error",`${i}: ${e}`),ipc.send("log","debug",`at ${t} ${n}:${o}`)}}function waitForFonts(){return new Promise((e=>{"complete"!==document.readyState||"loaded"!==document.fonts.status?document.addEventListener("readystatechange",(()=>{"complete"===document.readyState&&("loaded"===document.fonts.status?e():document.fonts.onloadingdone=()=>{"loaded"===document.fonts.status&&e()})})):e()}))}function initSystemInformationProxy(){const{nanoid:e}=require("nanoid/non-secure");window.si=new Proxy({},{apply:()=>{throw new Error("Cannot use sysinfo proxy directly as a function")},set:()=>{throw new Error("Cannot set a property on the sysinfo proxy")},get:(t,n,o)=>function(...t){let o="function"==typeof t[t.length-1];return new Promise(((i,r)=>{let s=e();ipc.once("systeminformation-reply-"+s,((e,n)=>{o&&t[t.length-1](n),i(n)})),ipc.send("systeminformation-call",n,s,...t)}))}})}window.settings=require(settingsFile),window.shortcuts=require(shortcutsFile),window.lastWindowState=require(lastWindowStateFile),remote.process.argv.includes("--nointro")?window.settings.nointroOverride=!0:window.settings.nointroOverride=!1,electron.remote.process.argv.includes("--nocursor")?window.settings.nocursorOverride=!0:window.settings.nocursorOverride=!1,ipc.once("getThemeOverride",((e,t)=>{null!==t?(window.settings.theme=t,window.settings.nointroOverride=!0,_loadTheme(require(path.join(themesDir,window.settings.theme+".json")))):_loadTheme(require(path.join(themesDir,window.settings.theme+".json")))})),ipc.send("getThemeOverride"),ipc.once("getKbOverride",((e,t)=>{null!==t&&(window.settings.keyboard=t,window.settings.nointroOverride=!0)})),ipc.send("getKbOverride"),window._loadTheme=e=>{document.querySelector("style.theming")&&document.querySelector("style.theming").remove();let t=new FontFace(e.cssvars.font_main,`url("${path.join(fontsDir,e.cssvars.font_main.toLowerCase().replace(/ /g,"_")+".woff2").replace(/\\/g,"/")}")`),n=new FontFace(e.cssvars.font_main_light,`url("${path.join(fontsDir,e.cssvars.font_main_light.toLowerCase().replace(/ /g,"_")+".woff2").replace(/\\/g,"/")}")`),o=new FontFace(e.terminal.fontFamily,`url("${path.join(fontsDir,e.terminal.fontFamily.toLowerCase().replace(/ /g,"_")+".woff2").replace(/\\/g,"/")}")`);document.fonts.add(t),document.fonts.load("12px "+e.cssvars.font_main),document.fonts.add(n),document.fonts.load("12px "+e.cssvars.font_main_light),document.fonts.add(o),document.fonts.load("12px "+e.terminal.fontFamily),document.querySelector("head").innerHTML+=`<style class="theming">\n    :root {\n        --font_main: "${window._purifyCSS(e.cssvars.font_main)}";\n        --font_main_light: "${window._purifyCSS(e.cssvars.font_main_light)}";\n        --font_mono: "${window._purifyCSS(e.terminal.fontFamily)}";\n        --color_r: ${window._purifyCSS(e.colors.r)};\n        --color_g: ${window._purifyCSS(e.colors.g)};\n        --color_b: ${window._purifyCSS(e.colors.b)};\n        --color_black: ${window._purifyCSS(e.colors.black)};\n        --color_light_black: ${window._purifyCSS(e.colors.light_black)};\n        --color_grey: ${window._purifyCSS(e.colors.grey)};\n\n        /* Used for error and warning modals */\n        --color_red: ${window._purifyCSS(e.colors.red)||"red"};\n        --color_yellow: ${window._purifyCSS(e.colors.yellow)||"yellow"};\n    }\n\n    body {\n        font-family: var(--font_main), sans-serif;\n        cursor: ${window.settings.nocursorOverride||window.settings.nocursor?"none":"default"} !important;\n    }\n\n    * {\n   \t   ${window.settings.nocursorOverride||window.settings.nocursor?"cursor: none !important;":""}\n\t}\n\n    ${window._purifyCSS(e.injectCSS||"")}\n    </style>`,window.theme=e,window.theme.r=e.colors.r,window.theme.g=e.colors.g,window.theme.b=e.colors.b},window.audioManager=new AudioManager,electron.remote.app.focus();let i=0;function displayLine(){let e=document.getElementById("boot_screen"),t=fs.readFileSync(path.join(__dirname,"assets","misc","boot_log.txt")).toString().split("\n");function n(){return"linux"===require("os").platform()&&fs.existsSync("/etc/os-release")&&fs.readFileSync("/etc/os-release").toString().includes("arch")}if(void 0!==t[i])switch("Boot Complete"===t[i]?window.audioManager.granted.play():window.audioManager.stdout.play(),e.innerHTML+=t[i]+"<br/>",i++,!0){case 2===i:e.innerHTML+=`eDEX-UI Kernel version ${electron.remote.app.getVersion()} boot at ${Date().toString()}; root:xnu-1699.22.73~1/RELEASE_X86_64`;case 4===i:setTimeout(displayLine,500);break;case i>4&&i<25:setTimeout(displayLine,30);break;case 25===i:setTimeout(displayLine,400);break;case 42===i:setTimeout(displayLine,300);break;case i>42&&i<82:setTimeout(displayLine,25);break;case 83===i:n()&&(e.innerHTML+="btw i use arch<br/>"),setTimeout(displayLine,25);break;case i>=t.length-2&&i<t.length:setTimeout(displayLine,300);break;default:setTimeout(displayLine,25*Math.pow(1-i/1e3,3))}else setTimeout(displayTitleScreen,300)}async function displayTitleScreen(){let e=document.getElementById("boot_screen");null===e&&(e=document.createElement("section"),e.setAttribute("id","boot_screen"),e.setAttribute("style","z-index: 9999999"),document.body.appendChild(e)),e.innerHTML="",window.audioManager.theme.play(),await _delay(400),document.body.setAttribute("class",""),e.setAttribute("class","center"),e.innerHTML="<h1>eDEX-UI</h1>";let t=document.querySelector("section > h1");if(await _delay(200),document.body.setAttribute("class","solidBackground"),await _delay(100),t.setAttribute("style",`background-color: rgb(${window.theme.r}, ${window.theme.g}, ${window.theme.b});border-bottom: 5px solid rgb(${window.theme.r}, ${window.theme.g}, ${window.theme.b});`),await _delay(300),t.setAttribute("style",`border: 5px solid rgb(${window.theme.r}, ${window.theme.g}, ${window.theme.b});`),await _delay(100),t.setAttribute("style",""),t.setAttribute("class","glitch"),await _delay(500),document.body.setAttribute("class",""),t.setAttribute("class",""),t.setAttribute("style",`border: 5px solid rgb(${window.theme.r}, ${window.theme.g}, ${window.theme.b});`),await _delay(1e3),window.term)return e.remove(),!0;initGraphicalErrorHandling(),initSystemInformationProxy(),waitForFonts().then((()=>{e.remove(),initUI()}))}async function getDisplayName(){let e=settings.username||null;if(e)return e;try{e=await require("username")()}catch(e){}return e}async function initUI(){document.body.innerHTML+='<section class="mod_column" id="mod_column_left">\n        <h3 class="title"><p>PANEL</p><p>SYSTEM</p></h3>\n    </section>\n    <section id="main_shell" style="height:0%;width:0%;opacity:0;margin-bottom:30vh;" augmented-ui="bl-clip tr-clip exe">\n        <h3 class="title" style="opacity:0;"><p>TERMINAL</p><p>MAIN SHELL</p></h3>\n        <h1 id="main_shell_greeting"></h1>\n    </section>\n    <section class="mod_column" id="mod_column_right">\n        <h3 class="title"><p>PANEL</p><p>NETWORK</p></h3>\n    </section>',await _delay(10),window.audioManager.expand.play(),document.getElementById("main_shell").setAttribute("style","height:0%;margin-bottom:30vh;"),await _delay(500),document.getElementById("main_shell").setAttribute("style","margin-bottom: 30vh;"),document.querySelector("#main_shell > h3.title").setAttribute("style",""),await _delay(700),document.getElementById("main_shell").setAttribute("style","opacity: 0;"),document.body.innerHTML+=`\n    <section id="filesystem" style="width: 0px;" class="${window.settings.hideDotfiles?"hideDotfiles":""} ${window.settings.fsListView?"list-view":""}">\n    </section>\n    <section id="keyboard" style="opacity:0;">\n    </section>`,window.keyboard=new Keyboard({layout:path.join(keyboardsDir,settings.keyboard+".json"),container:"keyboard"}),await _delay(10),document.getElementById("main_shell").setAttribute("style",""),await _delay(270);let e=document.getElementById("main_shell_greeting");getDisplayName().then((t=>{e.innerHTML+=t?`Welcome back, <em>${t}</em>`:"Welcome back"})),e.setAttribute("style","opacity: 1;"),document.getElementById("filesystem").setAttribute("style",""),document.getElementById("keyboard").setAttribute("style",""),document.getElementById("keyboard").setAttribute("class","animation_state_1"),window.audioManager.keyboard.play(),await _delay(100),document.getElementById("keyboard").setAttribute("class","animation_state_1 animation_state_2"),await _delay(1e3),e.setAttribute("style","opacity: 0;"),await _delay(100),document.getElementById("keyboard").setAttribute("class",""),await _delay(400),e.remove(),window.mods={},window.mods.clock=new Clock("mod_column_left"),window.mods.sysinfo=new Sysinfo("mod_column_left"),window.mods.hardwareInspector=new HardwareInspector("mod_column_left"),window.mods.cpuinfo=new Cpuinfo("mod_column_left"),window.mods.ramwatcher=new RAMwatcher("mod_column_left"),window.mods.toplist=new Toplist("mod_column_left"),window.mods.netstat=new Netstat("mod_column_right"),window.mods.globe=new LocationGlobe("mod_column_right"),window.mods.conninfo=new Conninfo("mod_column_right"),document.querySelectorAll(".mod_column").forEach((e=>{e.setAttribute("class","mod_column activated")}));let t=0,n=document.querySelectorAll("#mod_column_left > div"),o=document.querySelectorAll("#mod_column_right > div"),i=setInterval((()=>{n[t]||o[t]?(window.audioManager.panels.play(),n[t]&&n[t].setAttribute("style","animation-play-state: running;"),o[t]&&o[t].setAttribute("style","animation-play-state: running;"),t++):clearInterval(i)}),500),r;await _delay(100),document.getElementById("main_shell").innerHTML+='\n        <ul id="main_shell_tabs">\n            <li id="shell_tab0" onclick="window.focusShellTab(0);" class="active"><p>MAIN SHELL</p></li>\n            <li id="shell_tab1" onclick="window.focusShellTab(1);"><p>EMPTY</p></li>\n            <li id="shell_tab2" onclick="window.focusShellTab(2);"><p>EMPTY</p></li>\n            <li id="shell_tab3" onclick="window.focusShellTab(3);"><p>EMPTY</p></li>\n            <li id="shell_tab4" onclick="window.focusShellTab(4);"><p>EMPTY</p></li>\n        </ul>\n        <div id="main_shell_innercontainer">\n            <pre id="terminal0" class="active"></pre>\n            <pre id="terminal1"></pre>\n            <pre id="terminal2"></pre>\n            <pre id="terminal3"></pre>\n            <pre id="terminal4"></pre>\n        </div>',window.term={0:new Terminal({role:"client",parentId:"terminal0",port:window.settings.port||3e3})},window.currentTerm=0,window.term[0].onprocesschange=e=>{document.getElementById("shell_tab0").innerHTML=`<p>MAIN - ${e}</p>`},window.onmouseup=e=>{window.keyboard.linkedToTerm&&window.term[window.currentTerm].term.focus()},window.term[0].term.writeln(`[1mWelcome to eDEX-UI v${electron.remote.app.getVersion()} - Electron v${process.versions.electron}[0m`),await _delay(100),window.fsDisp=new FilesystemDisplay({parentId:"filesystem"}),await _delay(200),document.getElementById("filesystem").setAttribute("style","opacity: 1;"),1===window.performance.navigation.type&&window.term[window.currentTerm].resendCWD(),await _delay(200),window.updateCheck=new UpdateChecker}window.settings.nointro||window.settings.nointroOverride?(initGraphicalErrorHandling(),initSystemInformationProxy(),document.getElementById("boot_screen").remove(),document.body.setAttribute("class",""),waitForFonts().then(initUI)):displayLine(),window.themeChanger=e=>{ipc.send("setThemeOverride",e),setTimeout((()=>{window.location.reload(!0)}),100)},window.remakeKeyboard=e=>{document.getElementById("keyboard").innerHTML="",window.keyboard=new Keyboard({layout:path.join(keyboardsDir,e+".json"||settings.keyboard+".json"),container:"keyboard"}),ipc.send("setKbOverride",e)},window.focusShellTab=e=>{window.audioManager.folder.play(),e!==window.currentTerm&&window.term[e]?(window.currentTerm=e,document.querySelectorAll(`ul#main_shell_tabs > li:not(:nth-child(${e+1}))`).forEach((e=>{e.setAttribute("class","")})),document.getElementById("shell_tab"+e).setAttribute("class","active"),document.querySelectorAll(`div#main_shell_innercontainer > pre:not(:nth-child(${e+1}))`).forEach((e=>{e.setAttribute("class","")})),document.getElementById("terminal"+e).setAttribute("class","active"),window.term[e].fit(),window.term[e].term.focus(),window.term[e].resendCWD(),window.fsDisp.followTab()):e>0&&e<=4&&null!==window.term[e]&&"object"!=typeof window.term[e]&&(window.term[e]=null,document.getElementById("shell_tab"+e).innerHTML="<p>LOADING...</p>",ipc.send("ttyspawn","true"),ipc.once("ttyspawn-reply",((t,n)=>{if(n.startsWith("ERROR"))document.getElementById("shell_tab"+e).innerHTML="<p>ERROR</p>";else if(n.startsWith("SUCCESS")){let t=Number(n.substr(9));window.term[e]=new Terminal({role:"client",parentId:"terminal"+e,port:t}),window.term[e].onclose=t=>{delete window.term[e].onprocesschange,document.getElementById("shell_tab"+e).innerHTML="<p>EMPTY</p>",document.getElementById("terminal"+e).innerHTML="",window.term[e].term.dispose(),delete window.term[e],window.useAppShortcut("PREVIOUS_TAB")},window.term[e].onprocesschange=t=>{document.getElementById("shell_tab"+e).innerHTML=`<p>#${e+1} - ${t}</p>`},document.getElementById("shell_tab"+e).innerHTML=`<p>::${t}</p>`,setTimeout((()=>{window.focusShellTab(e)}),500)}})))},window.openSettings=async()=>{if(document.getElementById("settingsEditor"))return;let e,t,n,o,i;fs.readdirSync(keyboardsDir).forEach((t=>{t.endsWith(".json")&&(t=t.replace(".json",""))!==window.settings.keyboard&&(e+=`<option>${t}</option>`)})),fs.readdirSync(themesDir).forEach((e=>{e.endsWith(".json")&&(e=e.replace(".json",""))!==window.settings.theme&&(t+=`<option>${e}</option>`)}));for(let e=0;e<electron.remote.screen.getAllDisplays().length;e++)e!==window.settings.monitor&&(n+=`<option>${e}</option>`);(await window.si.networkInterfaces()).forEach((e=>{e.iface!==window.mods.netstat.iface&&(o+=`<option>${e.iface}</option>`)})),window.keyboard.detach(),new Modal({type:"custom",title:`Settings <i>(v${electron.remote.app.getVersion()})</i>`,html:`<table id="settingsEditor">\n                    <tr>\n                        <th>Key</th>\n                        <th>Description</th>\n                        <th>Value</th>\n                    </tr>\n                    <tr>\n                        <td>shell</td>\n                        <td>The program to run as a terminal emulator</td>\n                        <td><input type="text" id="settingsEditor-shell" value="${window.settings.shell}"></td>\n                    </tr>\n                    <tr>\n                        <td>shellArgs</td>\n                        <td>Arguments to pass to the shell</td>\n                        <td><input type="text" id="settingsEditor-shellArgs" value="${window.settings.shellArgs||""}"></td>\n                    </tr>\n                    <tr>\n                        <td>cwd</td>\n                        <td>Working Directory to start in</td>\n                        <td><input type="text" id="settingsEditor-cwd" value="${window.settings.cwd}"></td>\n                    </tr>\n                    <tr>\n                        <td>env</td>\n                        <td>Custom shell environment override</td>\n                        <td><input type="text" id="settingsEditor-env" value="${window.settings.env}"></td>\n                    </tr>\n                    <tr>\n                        <td>username</td>\n                        <td>Custom username to display at boot</td>\n                        <td><input type="text" id="settingsEditor-username" value="${window.settings.username}"></td>\n                    </tr>\n                    <tr>\n                        <td>keyboard</td>\n                        <td>On-screen keyboard layout code</td>\n                        <td><select id="settingsEditor-keyboard">\n                            <option>${window.settings.keyboard}</option>\n                            ${e}\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>theme</td>\n                        <td>Name of the theme to load</td>\n                        <td><select id="settingsEditor-theme">\n                            <option>${window.settings.theme}</option>\n                            ${t}\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>termFontSize</td>\n                        <td>Size of the terminal text in pixels</td>\n                        <td><input type="number" id="settingsEditor-termFontSize" value="${window.settings.termFontSize}"></td>\n                    </tr>\n                    <tr>\n                        <td>audio</td>\n                        <td>Activate audio sound effects</td>\n                        <td><select id="settingsEditor-audio">\n                            <option>${window.settings.audio}</option>\n                            <option>${!window.settings.audio}</option>\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>audioVolume</td>\n                        <td>Set default volume for sound effects (0.0 - 1.0)</td>\n                        <td><input type="number" id="settingsEditor-audioVolume" value="${window.settings.audioVolume||"1.0"}"></td>\n                    </tr>\n                    <tr>\n                        <td>disableFeedbackAudio</td>\n                        <td>Disable recurring feedback sound FX (input/output, mostly)</td>\n                        <td><select id="settingsEditor-disableFeedbackAudio">\n                            <option>${window.settings.disableFeedbackAudio}</option>\n                            <option>${!window.settings.disableFeedbackAudio}</option>\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>port</td>\n                        <td>Local port to use for UI-shell connection</td>\n                        <td><input type="number" id="settingsEditor-port" value="${window.settings.port}"></td>\n                    </tr>\n                    <tr>\n                        <td>pingAddr</td>\n                        <td>IPv4 address to test Internet connectivity</td>\n                        <td><input type="text" id="settingsEditor-pingAddr" value="${window.settings.pingAddr||"1.1.1.1"}"></td>\n                    </tr>\n                    <tr>\n                        <td>clockHours</td>\n                        <td>Clock format (12/24 hours)</td>\n                        <td><select id="settingsEditor-clockHours">\n                            <option>${12===window.settings.clockHours?"12":"24"}</option>\n                            <option>${12===window.settings.clockHours?"24":"12"}</option>\n                        </select></td>\n                    <tr>\n                        <td>monitor</td>\n                        <td>Which monitor to spawn the UI in (defaults to primary display)</td>\n                        <td><select id="settingsEditor-monitor">\n                            ${void 0!==window.settings.monitor?"<option>"+window.settings.monitor+"</option>":""}\n                            ${n}\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>nointro</td>\n                        <td>Skip the intro boot log and logo${window.settings.nointroOverride?" (Currently overridden by CLI flag)":""}</td>\n                        <td><select id="settingsEditor-nointro">\n                            <option>${window.settings.nointro}</option>\n                            <option>${!window.settings.nointro}</option>\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>nocursor</td>\n                        <td>Hide the mouse cursor${window.settings.nocursorOverride?" (Currently overridden by CLI flag)":""}</td>\n                        <td><select id="settingsEditor-nocursor">\n                            <option>${window.settings.nocursor}</option>\n                            <option>${!window.settings.nocursor}</option>\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>iface</td>\n                        <td>Override the interface used for network monitoring</td>\n                        <td><select id="settingsEditor-iface">\n                            <option>${window.mods.netstat.iface}</option>\n                            ${o}\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>allowWindowed</td>\n                        <td>Allow using F11 key to set the UI in windowed mode</td>\n                        <td><select id="settingsEditor-allowWindowed">\n                            <option>${window.settings.allowWindowed}</option>\n                            <option>${!window.settings.allowWindowed}</option>\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>keepGeometry</td>\n                        <td>Try to keep a 16:9 aspect ratio in windowed mode</td>\n                        <td><select id="settingsEditor-keepGeometry">\n                            <option>${!1===window.settings.keepGeometry?"false":"true"}</option>\n                            <option>${!1===window.settings.keepGeometry?"true":"false"}</option>\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>excludeThreadsFromToplist</td>\n                        <td>Display threads in the top processes list</td>\n                        <td><select id="settingsEditor-excludeThreadsFromToplist">\n                            <option>${window.settings.excludeThreadsFromToplist}</option>\n                            <option>${!window.settings.excludeThreadsFromToplist}</option>\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>hideDotfiles</td>\n                        <td>Hide files and directories starting with a dot in file display</td>\n                        <td><select id="settingsEditor-hideDotfiles">\n                            <option>${window.settings.hideDotfiles}</option>\n                            <option>${!window.settings.hideDotfiles}</option>\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>fsListView</td>\n                        <td>Show files in a more detailed list instead of an icon grid</td>\n                        <td><select id="settingsEditor-fsListView">\n                            <option>${window.settings.fsListView}</option>\n                            <option>${!window.settings.fsListView}</option>\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>experimentalGlobeFeatures</td>\n                        <td>Toggle experimental features for the network globe</td>\n                        <td><select id="settingsEditor-experimentalGlobeFeatures">\n                            <option>${window.settings.experimentalGlobeFeatures}</option>\n                            <option>${!window.settings.experimentalGlobeFeatures}</option>\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>experimentalFeatures</td>\n                        <td>Toggle Chrome's experimental web features (DANGEROUS)</td>\n                        <td><select id="settingsEditor-experimentalFeatures">\n                            <option>${window.settings.experimentalFeatures}</option>\n                            <option>${!window.settings.experimentalFeatures}</option>\n                        </select></td>\n                    </tr>\n                </table>\n                <h6 id="settingsEditorStatus">Loaded values from memory</h6>\n                <br>`,buttons:[{label:"Open in External Editor",action:`electron.shell.openPath('${settingsFile}');electronWin.minimize();`},{label:"Save to Disk",action:"window.writeSettingsFile()"},{label:"Reload UI",action:"window.location.reload(true);"},{label:"Restart eDEX",action:"electron.remote.app.relaunch();electron.remote.app.quit();"}]},(()=>{window.keyboard.attach(),window.term[window.currentTerm].term.focus()}))},window.writeFile=e=>{fs.writeFile(e,document.getElementById("fileEdit").value,"utf-8",(()=>{document.getElementById("fedit-status").innerHTML="<i>File saved.</i>"}))},window.writeSettingsFile=()=>{window.settings={shell:document.getElementById("settingsEditor-shell").value,shellArgs:document.getElementById("settingsEditor-shellArgs").value,cwd:document.getElementById("settingsEditor-cwd").value,env:document.getElementById("settingsEditor-env").value,username:document.getElementById("settingsEditor-username").value,keyboard:document.getElementById("settingsEditor-keyboard").value,theme:document.getElementById("settingsEditor-theme").value,termFontSize:Number(document.getElementById("settingsEditor-termFontSize").value),audio:"true"===document.getElementById("settingsEditor-audio").value,audioVolume:Number(document.getElementById("settingsEditor-audioVolume").value),disableFeedbackAudio:"true"===document.getElementById("settingsEditor-disableFeedbackAudio").value,pingAddr:document.getElementById("settingsEditor-pingAddr").value,clockHours:Number(document.getElementById("settingsEditor-clockHours").value),port:Number(document.getElementById("settingsEditor-port").value),monitor:Number(document.getElementById("settingsEditor-monitor").value),nointro:"true"===document.getElementById("settingsEditor-nointro").value,nocursor:"true"===document.getElementById("settingsEditor-nocursor").value,iface:document.getElementById("settingsEditor-iface").value,allowWindowed:"true"===document.getElementById("settingsEditor-allowWindowed").value,forceFullscreen:window.settings.forceFullscreen,keepGeometry:"true"===document.getElementById("settingsEditor-keepGeometry").value,excludeThreadsFromToplist:"true"===document.getElementById("settingsEditor-excludeThreadsFromToplist").value,hideDotfiles:"true"===document.getElementById("settingsEditor-hideDotfiles").value,fsListView:"true"===document.getElementById("settingsEditor-fsListView").value,experimentalGlobeFeatures:"true"===document.getElementById("settingsEditor-experimentalGlobeFeatures").value,experimentalFeatures:"true"===document.getElementById("settingsEditor-experimentalFeatures").value},Object.keys(window.settings).forEach((e=>{"undefined"===window.settings[e]&&delete window.settings[e]})),fs.writeFileSync(settingsFile,JSON.stringify(window.settings,"",4)),document.getElementById("settingsEditorStatus").innerText="New values written to settings.json file at "+(new Date).toTimeString()},window.toggleFullScreen=()=>{let e=!electronWin.isFullScreen();electronWin.setFullScreen(e),window.lastWindowState.useFullscreen=e,fs.writeFileSync(lastWindowStateFile,JSON.stringify(window.lastWindowState,"",4))},window.openShortcutsHelp=()=>{if(document.getElementById("settingsEditor"))return;const e={COPY:"Copy selected buffer from the terminal.",PASTE:"Paste system clipboard to the terminal.",NEXT_TAB:"Switch to the next opened terminal tab (left to right order).",PREVIOUS_TAB:"Switch to the previous opened terminal tab (right to left order).",TAB_X:"Switch to terminal tab <strong>X</strong>, or create it if it hasn't been opened yet.",SETTINGS:"Open the settings editor.",SHORTCUTS:"List and edit available keyboard shortcuts.",FUZZY_SEARCH:"Search for entries in the current working directory.",FS_LIST_VIEW:"Toggle between list and grid view in the file browser.",FS_DOTFILES:"Toggle hidden files and directories in the file browser.",KB_PASSMODE:'Toggle the on-screen keyboard\'s "Password Mode", which allows you to safely<br>type sensitive information even if your screen might be recorded (disable visual input feedback).',DEV_DEBUG:"Open Chromium Dev Tools, for debugging purposes.",DEV_RELOAD:"Trigger front-end hot reload."};let t="";window.shortcuts.filter((e=>"app"===e.type)).forEach((n=>{let o=n.action.startsWith("TAB_")?"TAB_X":n.action;t+=`<tr>\n                        <td>${n.enabled?"YES":"NO"}</td>\n                        <td><input disabled type="text" maxlength=25 value="${n.trigger}"></td>\n                        <td>${e[o]}</td>\n                    </tr>`}));let n="";window.shortcuts.filter((e=>"shell"===e.type)).forEach((e=>{n+=`<tr>\n                            <td>${e.enabled?"YES":"NO"}</td>\n                            <td><input disabled type="text" maxlength=25 value="${e.trigger}"></td>\n                            <td>\n                                <input disabled type="text" placeholder="Run terminal command..." value="${e.action}">\n                                <input disabled type="checkbox" name="shortcutsHelpNew_Enter" ${e.linebreak?"checked":""}>\n                                <label for="shortcutsHelpNew_Enter">Enter</label>\n                            </td>\n                        </tr>`})),window.keyboard.detach(),new Modal({type:"custom",title:`Available Keyboard Shortcuts <i>(v${electron.remote.app.getVersion()})</i>`,html:`<h5>Using either the on-screen or a physical keyboard, you can use the following shortcuts:</h5>\n                <details open id="shortcutsHelpAccordeon1">\n                    <summary>Emulator shortcuts</summary>\n                    <table class="shortcutsHelp">\n                        <tr>\n                            <th>Enabled</th>\n                            <th>Trigger</th>\n                            <th>Action</th>\n                        </tr>\n                        ${t}\n                    </table>\n                </details>\n                <br>\n                <details id="shortcutsHelpAccordeon2">\n                    <summary>Custom command shortcuts</summary>\n                    <table class="shortcutsHelp">\n                        <tr>\n                            <th>Enabled</th>\n                            <th>Trigger</th>\n                            <th>Command</th>\n                        <tr>\n                       ${n}\n                    </table>\n                </details>\n                <br>`,buttons:[{label:"Open Shortcuts File",action:`electron.shell.openPath('${shortcutsFile}');electronWin.minimize();`},{label:"Reload UI",action:"window.location.reload(true);"}]},(()=>{window.keyboard.attach(),window.term[window.currentTerm].term.focus()}));let o=document.getElementById("shortcutsHelpAccordeon1"),i=document.getElementById("shortcutsHelpAccordeon2");o.addEventListener("toggle",(e=>{i.open=!o.open})),i.addEventListener("toggle",(e=>{o.open=!i.open}))},window.useAppShortcut=e=>{switch(e){case"COPY":return window.term[window.currentTerm].clipboard.copy(),!0;case"PASTE":return window.term[window.currentTerm].clipboard.paste(),!0;case"NEXT_TAB":return window.term[window.currentTerm+1]?window.focusShellTab(window.currentTerm+1):window.term[window.currentTerm+2]?window.focusShellTab(window.currentTerm+2):window.term[window.currentTerm+3]?window.focusShellTab(window.currentTerm+3):window.term[window.currentTerm+4]?window.focusShellTab(window.currentTerm+4):window.focusShellTab(0),!0;case"PREVIOUS_TAB":let t=window.currentTerm||4;return window.term[t]&&t!==window.currentTerm?window.focusShellTab(t):window.term[t-1]?window.focusShellTab(t-1):window.term[t-2]?window.focusShellTab(t-2):window.term[t-3]?window.focusShellTab(t-3):window.term[t-4]&&window.focusShellTab(t-4),!0;case"TAB_1":return window.focusShellTab(0),!0;case"TAB_2":return window.focusShellTab(1),!0;case"TAB_3":return window.focusShellTab(2),!0;case"TAB_4":return window.focusShellTab(3),!0;case"TAB_5":return window.focusShellTab(4),!0;case"SETTINGS":return window.openSettings(),!0;case"SHORTCUTS":return window.openShortcutsHelp(),!0;case"FUZZY_SEARCH":return window.activeFuzzyFinder=new FuzzyFinder,!0;case"FS_LIST_VIEW":return window.fsDisp.toggleListview(),!0;case"FS_DOTFILES":return window.fsDisp.toggleHidedotfiles(),!0;case"KB_PASSMODE":return window.keyboard.togglePasswordMode(),!0;case"DEV_DEBUG":return electron.remote.getCurrentWindow().webContents.toggleDevTools(),!0;case"DEV_RELOAD":return window.location.reload(!0),!0;default:return console.warn(`Unknown "${e}" app shortcut action`),!1}};const globalShortcut=electron.remote.globalShortcut;globalShortcut.unregisterAll(),window.registerKeyboardShortcuts=()=>{window.shortcuts.forEach((e=>{if(e.enabled)if("app"===e.type)if("TAB_X"===e.action)for(let t=1;t<=5;t++){let n=e.trigger.replace("X",t),o=()=>{window.useAppShortcut(`TAB_${t}`)};globalShortcut.register(n,o)}else globalShortcut.register(e.trigger,(()=>{window.useAppShortcut(e.action)}));else"shell"===e.type?globalShortcut.register(e.trigger,(()=>{let t=e.linebreak?"writelr":"write";window.term[window.currentTerm][t](e.action)})):console.warn(`${e.trigger} has unknown type`)}))},window.registerKeyboardShortcuts(),window.addEventListener("focus",(()=>{window.registerKeyboardShortcuts()})),window.addEventListener("blur",(()=>{globalShortcut.unregisterAll()})),document.addEventListener("keydown",(e=>{"Alt"===e.key&&e.preventDefault(),e.code.startsWith("Alt")&&e.ctrlKey&&e.shiftKey&&e.preventDefault(),"F11"!==e.key||settings.allowWindowed||e.preventDefault(),"KeyD"===e.code&&e.ctrlKey&&e.preventDefault(),"KeyA"===e.code&&e.ctrlKey&&e.preventDefault()})),window.addEventListener("keyup",(e=>{"win32"===require("os").platform()&&"F4"===e.key&&!0===e.altKey&&electron.remote.app.quit()})),electron.webFrame.setVisualZoomLevelLimits(1,1),window.onresize=()=>{void 0!==window.currentTerm&&void 0!==window.term[window.currentTerm]&&window.term[window.currentTerm].fit()},window.resizeTimeout=null;let electronWin=electron.remote.getCurrentWindow();electronWin.on("resize",(()=>{!1!==settings.keepGeometry&&(clearTimeout(window.resizeTimeout),window.resizeTimeout=setTimeout((()=>{let e=electron.remote.getCurrentWindow();if(e.isFullScreen())return!1;if(e.isMaximized())return e.unmaximize(),e.setFullScreen(!0),!1;let t=e.getSize();t[0]>=t[1]?e.setSize(t[0],parseInt(9*t[0]/16)):e.setSize(t[1],parseInt(9*t[1]/16))}),100))})),electronWin.on("leave-full-screen",(()=>{electron.remote.getCurrentWindow().setSize(960,540)}));
./prebuild-src/ui.html:        <title>eDEX-UI</title>
./prebuild-src/assets/css/boot_screen.css:section#boot_screen{position:fixed;top:0;left:0;width:100%;height:100%;padding:0;margin:0;overflow:hidden;font-family:monospace;font-size:1.4vh;text-align:left;display:flex;align-items:flex-end;justify-content:flex-start}section#boot_screen.center{align-items:center;justify-content:center}section#boot_screen h1{font-family:var(--font_main);font-size:10vh;text-align:center;border-bottom:.46vh solid rgb(var(--color_r),var(--color_g),var(--color_b));padding-top:2vh;padding-right:2vh;padding-left:1.5vh;background-color:transparent;opacity:0;animation-name:fadeInTitle;animation-duration:.3s;animation-timing-function:linear;animation-fill-mode:forwards;animation-iteration-count:1}section#boot_screen h1.glitch{border:none;color:transparent}@keyframes fadeInTitle{from{opacity:0}to{opacity:1}}section#boot_screen h1::before{content:"eDEX-UI";display:block;transform:translateY(100%) translateX(-2%);clip-path:polygon(100% 0%,100% 40%,0% 40%,0% 0%);color:rgba(var(--color_r),var(--color_g),var(--color_b),.8);animation-name:derezzer_top;animation-duration:50ms;animation-timing-function:linear;animation-iteration-count:infinite;animation-direction:alternate-reverse;animation-play-state:paused;height:0;opacity:0}section#boot_screen h1.glitch::before{height:auto;opacity:1;animation-play-state:running}@keyframes derezzer_top{from{transform:translateY(100%) translateX(-1%)}to{transform:translateY(100%) translateX(-5%)}}section#boot_screen h1::after{content:"eDEX-UI";display:block;transform:translateY(-100%) translateX(2%);clip-path:polygon(100% 40%,100% 100%,0% 100%,0% 40%);color:rgba(var(--color_r),var(--color_g),var(--color_b),.9);animation-name:derezzer_bottom;animation-duration:50ms;animation-timing-function:linear;animation-iteration-count:infinite;animation-direction:alternate-reverse;animation-play-state:paused;height:0;opacity:0}section#boot_screen h1.glitch::after{height:auto;opacity:1;animation-play-state:running}@keyframes derezzer_bottom{from{transform:translateY(-100%) translateX(1%)}to{transform:translateY(-100%) translateX(3%)}}
./prebuild-src/assets/misc/boot_log.txt:Welcome to eDEX-UI!
./SECURITY.md:If you're concerned about a potential or proven security vulnerability in this software, please get in touch by sending an email at [`gabriel@saillard.dev`](mailto:%22Gabriel%20SAILLARD%22%20%3Cgabriel%40saillard.dev%3E?subject=%5BSECURITY%5D%20eDEX-UI%20vulnerability%20concern&body=(Please%20describe%20what%20code%20you%20think%20is%20vulnerable%2C%20and%20provide%20a%20way%20to%20reproduce%20the%20issue%20if%20possible)).
./package.json:  "productName": "eDEX-UI",
./package.json:    "productName": "eDEX-UI",
./package.json:    "artifactName": "eDEX-UI-${os}-${arch}.${ext}",
./package.json:      "artifactName": "eDEX-UI-Linux-${arch}.AppImage"
./package.json:      "artifactName": "eDEX-UI-macOS-${arch}.dmg"
./package.json:      "artifactName": "eDEX-UI-Windows-${arch}.exe",
./README.md:  <a href="https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Windows.exe" target="_blank"><img alt="undefined" src="https://badgen.net/badge/Download/Windows/?color=blue&icon=windows&label"></a>
./README.md:  <a href="https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-macOS.dmg" target="_blank"><img alt="undefined" src="https://badgen.net/badge/Download/macOS/?color=grey&icon=apple&label"></a>
./README.md:  <a href="https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Linux-x86_64.AppImage" target="_blank"><img alt="undefined" src="https://badgen.net/badge/Download/Linux64/?color=orange&icon=terminal&label"></a>
./README.md:  <a href="https://github.com/GitSquared/edex-ui/releases/download/v2.2.8/eDEX-UI-Linux-arm64-AppImage" target="_blank"><img alt="undefined" src="https://badgen.net/badge/Download/LinuxArm64/?color=orange&icon=terminal&label"></a>
./README.md:eDEX-UI is a fullscreen, cross-platform terminal emulator and system monitor that looks and feels like a sci-fi computer interface.
./README.md:Heavily inspired from the [TRON Legacy movie effects](https://web.archive.org/web/20170511000410/http://jtnimoy.com/blogs/projects/14881671) (especially the [Board Room sequence](https://gmunk.com/TRON-Board-Room)), the eDEX-UI project was originally meant to be *"[DEX-UI](https://github.com/seenaburns/dex-ui) with less « art » and more « distributable software »"*.
./README.md:Click the banner below and sign up to **Bytes**, the only newsletter cool enough to be recommended by eDEX-UI.
./README.md:_[neofetch](https://github.com/dylanaraps/neofetch) on eDEX-UI 2.2 with the default "tron" theme & QWERTY keyboard_
./README.md:_Checking out available themes in [eDEX's config dir](https://github.com/GitSquared/edex-ui/wiki/userData) with [`ranger`](https://github.com/ranger/ranger) on eDEX-UI 2.2 with the "blade" theme_
./README.md:_[cmatrix](https://github.com/abishekvashok/cmatrix) on eDEX-UI 2.2 with the experimental "tron-disrupted" theme, and the user-contributed DVORAK keyboard_
./README.md:_Editing eDEX-UI source code with `nvim` on eDEX-UI 2.2 with the custom [`horizon-full`](https://github.com/GitSquared/horizon-edex-theme) theme_
./README.md:eDEX-UI's source code was primarily written by me, [Squared](https://github.com/GitSquared). If you want to get in touch with me or find other projects I'm involved in, check out [my website](https://gaby.dev).
